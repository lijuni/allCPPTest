//P405 shared_ptr
#include<iostream>
#include<string>
#include<vector>
#include<memory>
#include<list>
#include<initializer_list>

using namespace std;

int main()
{
	class StrBlob{
	public:
		typedef vector<string>::size_type size_type;
		StrBlob();
		StrBlob( initializer_list<string> li);
		size_type size() const { return data->size(); }
		bool empty() const { return data->empty(); }
		void push_back( const string &s ) { data->push_back(s); }
		void pop_back();
		string &front();
		string &back();
	
	private:
		std::shared_ptr<vector<string>> data;
		void check( size_type i, const string &msg ) const;

	};

	
	StrBlob::StrBlob()
	{
		data = make_shared<vector<string>>() ;
	}

	//StrBlob::StrBlob() : data( make_shared<vector<string>>() ) {}
	
	StrBlob::StrBlob(initializer_list<string> li) : data( make_shared<vector<string>>(li) ) {}

	void StrBlob::pop_back()
	{
		check(0, "pop_back");
		data->pop_back();
	}

	string &StrBlob::front()
	{
		check(0, "front");
		return data->front();
	}

	string &StrBlob::back()
	{
		check(0, "back");
		return data->back();
	}

	void StrBlob::check( size_type i, const string &s) const
	{
		if( data->size_type <= i)
			throw out_of_range(s);
	}

}
